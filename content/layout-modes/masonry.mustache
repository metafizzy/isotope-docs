---
title: masonry
---

<p><code>masonry</code> is the default layout mode.  It works by placing elements in optimal position based on available vertical space, sort of like a mason fitting stones in a wall. <code>masonry</code> uses the same code from the <a href="https://masonry.desandro.com">Masonry library</a>.</p> 

<div class="big-demo go-wide">
  <div class="grid js-isotope" data-isotope-options='{ "masonry": { "columnWidth": 110 } }'>
    {{> grid-splash-items}}
  </div>
  {{> edit-demo default="mEinp" }}
</div>

{{! --------------------------------------------------- }}

<h2>Options</h2>

{{! --------------------------------------------------- }}

<h3>columnWidth</h3>

<p>Aligns items to a horizontal grid.</p>

<div class="call-out call-out--chill">
  <p>We recommend setting <code>columnWidth</code>. If <code>columnWidth</code> is not set, Isotope will use the outer width of the first item.</p>
</div>

<div class="duo example">
  <div class="duo__cell example__code">
    ``` js
    masonry: {
      columnWidth: 50
    }
    ```
  </div>
  <div class="duo__cell example__demo">
    <div class="grid js-isotope"
      data-isotope-options='{ "masonry": { "columnWidth": 50 } }'>
      {{> grid-items}}
    </div>
    {{> edit-demo default="mEinp" }}
  </div>
</div>

<p>Use <a href="../options.html#element-sizing">element sizing</a> for responsive layouts with percentage widths. Set <code>columnWidth</code> to an <i>Element</i> or Selector <i>String</i> to use the outer width of the element.</p>

<div class="duo example">
  <div class="duo__cell example__code">
    ``` html
    <div class="grid">
      <!-- .grid-sizer empty element, only used for element sizing -->
      <div class="grid-sizer"></div>
      <div class="grid-item"></div>
      <div class="grid-item grid-item--width2"></div>
      ...
    </div>
    ```

    ``` css
    /* fluid 5 columns */
    .grid-sizer,
    .grid-item { width: 20%; }
    /* 2 columns wide */
    .grid-item--width2 { width: 40%; }
    ```

    ``` js
    $('.grid').isotope({
      itemSelector: '.grid-item',
      percentPosition: true,
      masonry: {
        // use outer width of grid-sizer for columnWidth
        columnWidth: '.grid-sizer'
      }
    })
    ```
  </div>
  <div class="duo__cell example__demo">
    <div class="grid grid--fluid-5-col js-isotope"
      data-isotope-options='{ "masonry": { "columnWidth": ".grid-sizer" }, "itemSelector": ".grid-item", "percentPosition": true }'>
      <div class="grid-sizer"></div>
      {{> grid-items-fewer}}
    </div>
    {{> edit-demo default="mIkhq" }}
  </div>
</div>

{{! --------------------------------------------------- }}

<h3>gutter</h3>

<p>The horizontal space between item elements.</p>

<div class="duo example">
  <div class="duo__cell example__code">
    ``` js
    masonry: {
      columnWidth: 50,
      gutter: 10
    }
    ```
  </div>
  <div class="duo__cell example__demo">
    <div class="grid grid-has-gutter js-isotope" data-isotope-options='{ "masonry": { "columnWidth": 50, "gutter": 10 } }'>
      {{> grid-items-fewer}}
    </div>
    {{> edit-demo default="dHsCJ" }}
  </div>
</div>

<p>To set vertical space between elements, use <code>margin</code> CSS.</p>

<div class="duo example">
  <div class="duo__cell example__code">
    ``` js
    masonry: {
      columnWidth: 50,
      gutter: 10
    }
    ```

    ``` css
    .grid-item {
      margin-bottom: 10px;
    }
    ```
  </div>
  <div class="duo__cell example__demo">
    <div class="grid grid-has-gutter grid--masonry-gutter-bottom js-isotope " data-isotope-options='{ "masonry": { "columnWidth": 50, "gutter": 10 } }'>
      {{> grid-items-fewer}}
    </div>
    {{> edit-demo default="sqrwo" }}
  </div>
</div>

<p>If set to an <i>Element</i> or Selector <i>String</i>, Masonry will use the width of that element. See <a href="../options.html#element-sizing">Element sizing</a>.</p>

<div class="duo example">
  <div class="duo__cell example__code">
    ``` html
    <div class="grid">
      <div class="grid-sizer"></div>
      <div class="gutter-sizer"></div>
      <div class="grid-item"></div>
      <div class="grid-item grid-item--width2"></div>
      ...
    </div>
    ```

    ``` css
    .grid-sizer,
    .grid-item { width: 22%; }

    .gutter-sizer { width: 4%; }

    .grid-item--width2 { width: 48%; }
    ```

    ``` js
    masonry: {
      columnWidth: '.grid-sizer',
      gutter: '.gutter-sizer'
    },
    itemSelector: '.grid-item',
    percentPosition: true
    ```

  </div>
  <div class="duo__cell example__demo">

    <div class="grid grid--fluid-gutter js-isotope"
      data-isotope-options='{ "itemSelector": ".grid-item", "percentPosition": true, "masonry": { "columnWidth": ".grid-sizer", "gutter": ".gutter-sizer" } }'>
      <div class="grid-sizer"></div>
      <div class="gutter-sizer"></div>
      {{> grid-items}}
    </div>

    {{> edit-demo default="aEmkl" }}
  </div>

</div>

{{! --------------------------------------------------- }}

<h3>isFitWidth</h3>

<p>Sets the width of the container to fit the available number of columns, based the size of container's parent element. When enabled, you can center the container with CSS.</p>

<div class="call-out">
  <p>isFitWidth does not work with <a href="../options.html#element-sizing">element sizing</a> <em>and</em> percentage width. Either <code>columnWidth</code> needs to be set to a fixed size, like <code>columnWidth: 120</code>, or items need to have a fixed size in pixels, like <code>width: 120px</code>. Otherwise, the container and item widths will collapse on one another.</p>
</div>

<div class="duo example">
  <div class="duo__cell example__code">
    ``` js
    masonry: {
      columnWidth: 100,
      isFitWidth: true
    }
    ```

    ``` css
    /* center container with CSS */
    .grid {
      margin: 0 auto;
    }
    ```
  </div>
  <div class="duo__cell example__demo"  style="border: 2px solid #484542; padding-top: 10px;">
    <div class="grid grid--fit-width js-isotope" data-isotope-options='{ "masonry": { "columnWidth": 100, "isFitWidth": true } }'>
      <div class="grid-item grid-item--width2"></div>
      <div class="grid-item grid-item--width2 grid-item--height2"></div>
      <div class="grid-item grid-item--width2 grid-item--height2"></div>
      <div class="grid-item grid-item--width2"></div>
      <div class="grid-item grid-item--width2 grid-item--height2"></div>
      <div class="grid-item grid-item--width2 grid-item--height2"></div>
      <div class="grid-item grid-item--width2"></div>
      <div class="grid-item grid-item--width2 grid-item--height2"></div>
      <div class="grid-item grid-item--width2"></div>
    </div>

    {{> edit-demo default="BptxJ" }}
  </div>

</div>

{{! --------------------------------------------------- }}
