---
title: masonryHorizontal
---

<p>masonryHorizontal is the horizontal version of <a href="masonry.html">masonry</a>. It works by placing elements in optimal position based on available horizontal space.</p>

<div class="big-demo go-wide">
  <div class="grid grid--horizontal" data-isotope='{ "layoutMode": "masonryHorizontal", "masonryHorizontal": { "rowHeight": 110 } }'>
    {{> grid-splash-items}}
  </div>
  {{> edit-demo default="oCiAD" }}
</div>

<h2>Install</h2>

<p>This layout mode is not included in <a href="../isotope.pkgd.js">isotope.pkgd.js</a> and must be installed separately.</p>

<p><a href="https://raw.github.com/metafizzy/isotope-masonry-horizontal/master/masonry-horizontal.js">Download masonry-horizontal.js on GitHub</a>.</p>

<p>Install with Bower:</p>

```
bower install isotope-masonry-horizontal
```

<p><a href="https://www.npmjs.com/package/isotope-masonry-horizontal">Install with npm</a>:</p>

``` bash
npm install isotope-masonry-horizontal
```

{{! --------------------------------------------------- }}

<h2>Options</h2>

{{! --------------------------------------------------- }}

<h3>rowHeight</h3>

<p>The height of a row of a vertical grid.</p>

<p>If <code>rowHeight</code> is not set, the outer height of the first element will be used by default.</p>

<div class="duo example">
  <div class="duo__cell example__code">
    ``` js
    layoutMode: 'masonryHorizontal',
    masonryHorizontal: {
      rowHeight: 50
    }
    ```
  </div>
  <div class="duo__cell example__demo">
    <div class="grid grid--horizontal grid--counting" data-isotope='{ "layoutMode": "masonryHorizontal", "masonryHorizontal": { "rowHeight": 50 } }'>
      {{> grid-items}}
    </div>
    {{> edit-demo default="oCiAD" }}
  </div>
</div>

<p>If set to an <i>Element</i> or Selector <i>String</i>, the height of that element will be used. See <a href="../options.html/#element-sizing">Element sizing</a>. This is useful for responsive design and media queries. <a href="https://codepen.io/desandro/pen/bckrz">See masonryHorizontal element sizing example on CodePen</a>.</p>


{{! needs demo }}

{{! --------------------------------------------------- }}

<h3>gutter</h3>

<p>The vertical space between item elements.</p>

<div class="duo example">
  <div class="duo__cell example__code">
    ``` js
    layoutMode: 'masonryHorizontal',
    masonryHorizontal: {
      rowHeight: 50,
      gutter: 10
    }
    ```
  </div>
  <div class="duo__cell example__demo">
    <div class="grid grid--horizontal grid--counting grid--masonry-horizontal-gutter" data-isotope='{ "layoutMode": "masonryHorizontal", "masonryHorizontal": { "rowHeight": 50, "gutter": 10 } }'>
      {{> grid-items}}
    </div>
    {{> edit-demo default="pkzxK" }}
  </div>
</div>

<p>To set horizontal space between elements, use <code>margin</code> CSS.</p>

<div class="duo example">
  <div class="duo__cell example__code">
    ``` js
    layoutMode: 'masonryHorizontal',
    masonryHorizontal: {
      rowHeight: 50,
      gutter: 10
    }
    ```

    ``` css
    .grid-item {
      margin-right: 10px;
    }
    ```
  </div>
  <div class="duo__cell example__demo">
    <div class="grid grid--horizontal grid--counting grid--masonry-horizontal-gutter grid--masonry-horizontal-gutter-right" data-isotope='{ "layoutMode": "masonryHorizontal", "masonryHorizontal": { "rowHeight": 50, "gutter": 10 } }'>
      {{> grid-items}}
    </div>
    {{> edit-demo default="gsJlr" }}
  </div>
</div>

<p>If set to an <i>Element</i> or Selector <i>String</i>, the outer height of that element will be used. See <a href="../options.html#element-sizing">Element sizing</a>. This is useful for responsive design and media queries. <a href="https://codepen.io/desandro/pen/klrvb">See masonryHorizontal element sizing with gutter example on CodePen</a>.</p>

{{! needs demo }}
