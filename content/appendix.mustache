---
title: Appendix
---

{{! ----------------------------------------------------------------- }}

<h2>Extra examples</h2>

<ul>
  <li><a href="https://codepen.io/desandro/pen/owAyG/">Combination filters with functions</a></li>
  <li><a href="https://codepen.io/desandro/pen/JGKyrY">Combination inclusive filters with checkboxes</a> and <a href="https://codepen.io/desandro/pen/GFbAs">Combination inclusive and exclusive filters with selects and checkboxes</a>. Explanation on <a href="https://github.com/metafizzy/isotope/issues/771#issuecomment-50991110">issue #771</a>.</li>
  <li><a href="https://codepen.io/desandro/pen/zrMXQv">Inclusive combination filters with toggle buttons</a></li>
  <li><a href="https://codepen.io/desandro/pen/Kpvyd">Reveal items on init</a></li>
  <li><a href="https://codepen.io/desandro/pen/AEslp">Only filter items, no layout</a>. For <a href="https://github.com/metafizzy/isotope/issues/675#issuecomment-40675160">issue #675</a></li>
  <li><a href="https://codepen.io/desandro/pen/mCdbD">Search and filter buttons</a></li>
  <li><a href="https://codepen.io/desandro/pen/bsHix">Reveal each image as they load</a></li>
  <li><a href="https://codepen.io/desandro/pen/vEJbNr">Filtering with toggle on/off buttons</a></li>
  <li><a href="https://codepen.io/desandro/pen/vErxXj">Filtering with URL hash</a>. View <a href="https://s.codepen.io/desandro/debug/vErxXj#filter=%3Anot(.transition)">debug version</a> to see filter in URL hash.</li>
  <li><a href="https://codepen.io/desandro/pen/zGZywM">Sorting by selected category</a>. For <a href="https://github.com/metafizzy/isotope/issues/901">issue 901</a></li>
</ul>

{{! ----------------------------------------------------------------- }}

<h2>Web fonts</h2>

<p>Like images, unloaded web fonts can throw off Isotope. To resolve this, trigger <a href="methods.html#layout"><code>layout</code></a> after fonts have been loaded. Both Typekit and Google WebFont Loader provide font events to control scripts based on how fonts are loaded.</p>

<ul>
  <li><a href="https://blog.typekit.com/2010/10/18/more-control-with-typekits-font-events/">Typekit font events</a></li>
  <li><a href="https://developers.google.com/fonts/docs/webfont_loader#Events">Google WebFont Loader: Events</a></li>
</ul>

{{! ----------------------------------------------------------------- }}

<h3>Typekit</h3>

<p>Try the script below when using Isotope on a page with Typekit. This will trigger Isotope when the document is ready and again when fonts have loaded. Be sure to remove Typekitâ€™s default script, <code>try{Typekit.load();}catch(e){}</code>.</p>

``` js
var $grid;

function triggerIsotope() {
  // don't proceed if $grid has not been selected
  if ( !$grid ) {
    return;
  }
  // init Isotope
  $grid.isotope({
    // options
  });
}
// trigger Isotope on document ready
$(function(){
  $grid = $('.grid');
  triggerIsotope();
});
// trigger Isotope when fonts have loaded
Typekit.load({
  active: triggerIsotope,
  inactive: triggerIsotope
});
```

``` js
// or with vanilla JS
var grid, iso;

function triggerIsotope() {
  // don't proceed if doc isn't ready
  if ( !grid ) {
    return;
  }
  // init Isotope
  iso = new Isotope( grid, {
    // options
  });
}
// initialize Isotope on document ready
docReady( function() {
  var grid = document.querySelector('.grid');
  triggerIsotope();
});
// trigger Isotope when fonts have loaded
Typekit.load({
  active: triggerIsotope,
  inactive: triggerIsotope
});
```

{{! ----------------------------------------------------------------- }}

<h2>RequireJS</h2>

<p>Isotope supports <a href="http://requirejs.org">RequireJS</a>.</p>

<p>You can require <a href="isotope.pkgd.js">isotope.pkgd.js</a>.</p>

``` js
requirejs( [
  'path/to/isotope.pkgd.js',
], function( Isotope ) {
  var iso = new Isotope( '.grid', {...});
});
```

<p id="requirejs-layout-modes">Any <a href="layout-modes.html#included-modes">layout mode that&rsquo;s not included</a>, will need to be required separately</p>

``` js
requirejs( [
  'path/to/isotope.pkgd.js',
  'path/to/masonry-horizontal.js'
], function( Isotope ) {
  var iso = new Isotope( '.grid', {
    layoutMode: 'masonryHorizontal'
  });
});
```

<p id="requirejs-pkgd-jquery">To use Isotope as a jQuery plugin with RequireJS and isotope.pkgd.js, you need to run jQuery bridget.</p>


``` js
// require the require function
requirejs( [ 'require', 'jquery', 'path/to/isotope.pkgd.js' ],
  function( require, $, Isotope ) {
    // require jquery-bridget, it's included in isotope.pkgd.js
    require( [ 'jquery-bridget/jquery.bridget' ],
    function() {
      // make Isotope a jQuery plugin
      $.bridget( 'isotope', Isotope );
      // now you can use $().isotope()
      $('.grid').isotope({...});
    }
  );
});
```

<p id="requirejs-bower">Or, you can manage dependencies with <a href="https://bower.io">Bower</a>. Set <a href="http://requirejs.org/docs/api.html#config-baseUrl">baseUrl</a> to <code>bower_components</code> and set a path config for all your application code.</p>

``` js
requirejs.config({
  baseUrl: 'bower_components/',
  paths: {
    app: '../'
  }
});

requirejs( [
  'isotope/js/isotope',
  'app/my-component.js'
], function( Isotope, myComp ) {
  var iso = new Isotope( '.grid', {...});
});
```

<p id="requirejs-bower-jquery">You can require Bower dependencies and use Isotope as a jQuery plugin with jQuery Bridget.</p>

``` js
requirejs.config({
  baseUrl: '../bower_components',
  paths: {
    jquery: 'jquery/jquery'
  }
});

requirejs( [
    'jquery',
    'isotope/js/isotope',
    'jquery-bridget/jquery.bridget'
  ],
  function( $, Isotope ) {
    // make Isotope a jQuery plugin
    $.bridget( 'isotope', Isotope );
    // now you can use $().isotope()
    $('.grid').isotope({...});
});
```

{{! ----------------------------------------------------------------- }}

<h2>Browserify</h2>

<p>Isotope works with <a href="http://browserify.org">Browserify</a>. <a href="https://www.npmjs.com/package/isotope-layout">Install Isotope with npm</a>.</p>

```
npm install isotope-layout
```

``` js
var Isotope = require('isotope-layout');

var iso = new Isotope( '.grid', {
  // options...
});
```

<p>Install and require <a href="layout-modes.html#included-modes">layout modes that are not included</a>.</p>

``` bash
npm install isotope-cells-by-row
```

``` js
var Isotope = require('isotope-layout');
// add cellsByRow layout mode
require('isotope-cells-by-row')

var iso = new Isotope( '.grid', {
  layoutMode: 'cellsByRow'
});
```

<p id="browserify-jquery">To use Isotope as a jQuery plugin with Browserify, you need to use <a href="https://www.npmjs.com/package/jquery-bridget">jQuery Bridget</a></p>

``` bash
npm install jquery
npm install jquery-bridget
```

``` js
var $ = require('jquery');
var jQBridget = require('jquery-bridget');
var Isotope = require('isotope-layout');
// make Isotope a jQuery plugin
$.bridget( 'isotope', Isotope );
// now you can use $().isotope()
$('.grid').isotope({
  // options...
});
```

{{! ----------------------------------------------------------------- }}

<h2>Webpack</h2>

<p>Install Isotope and <a href="https://github.com/webpack/imports-loader">imports-loader</a> with npm.</p>

``` bash
npm install isotope-layout
npm install imports-loader
```

<p>In your config file, <code>webpack.config.js</code>, use the imports loader to disable <code>define</code> and set <code>window</code> for <code>isotope-layout</code> modules.</p>

``` js
// npm v2
module.exports = {
  module: {
    loaders: [
      {
        test: /isotope-layout/,
        loader: 'imports?define=>false&this=>window'
      }
    ]
  }
};
```

``` js
// npm v3
module.exports = {
  module: {
    loaders: [
      {
        test: /isotope\-|fizzy\-ui\-utils|desandro\-|masonry|outlayer|get\-size|doc\-ready|eventie|eventemitter/,
        loader: 'imports?define=>false&this=>window'
      }
    ]
  }
};
```

<p>(This hack is required because of an issue with how Webpack loads dependencies. <a href="https://github.com/webpack/webpack/issues/883">+1 this issue on GitHub</a> to help get this issue addressed.)</p>

<p>You can then <code>require(<span class="string">'isotope-layout'</span>)</code>.</p>

``` js
// main.js
var Isotope = require('isotope-layout');

var iso = new Isotope( '.grid', {
  // options...
});
```

<p>Run webpack.</p>


``` bash
webpack main.js bundle.js
```

<p>Layout modes and jQuery plugin functionality need to be installed separately, similar to <a href="#browserify">using Browserify</a>.</p>

{{! --------------------------------------------------- }}

<h2>Bootstrap</h2>

<p>You can use Isotope layouts with <a href="https://getbootstrap.com/css/#grid">Bootstrap grid system</a>. This example will display a fluid grid of 3 columns, using <code>col-xs-4</code> as <a href="layout-modes/masonry.html#columnwidth"><code>columnWidth</code></a>.</p>

<div class="example">
  <div class="example__code">
    ``` html
    <div class="container-fluid">
      <!-- add extra container element for Masonry -->
      <div class="grid">
        <!-- add sizing element for columnWidth -->
        <div class="grid-sizer col-xs-4"></div>
        <!-- items use Bootstrap .col- classes -->
        <div class="grid-item col-xs-8">
          <!-- wrap item content in its own element -->
          <div class="grid-item-content">...</div>
        </div>
        <div class="grid-item col-xs-4">
          <div class="grid-item-content">...</div>
        </div>
        ...
      </div>
    </div>
    ```

    ``` js
    $('.grid').isotope({
      itemSelector: '.grid-item', // use a separate class for itemSelector, other than .col-
      percentPosition: true,
      masonry: {
        columnWidth: '.grid-sizer'
      }
    });
    ```
  </div>
  {{> bootstrap-3-demo}}
</div>

<p>Use multiple <code>.col-</code> classes on item elements to use Bootstrap&rsquo;s grid media queries to responsively change column sizes. This example will use 2, then 3, then 4 columns at different screen sizes.</p>

<div class="example">
  <div class="example__code">
    ``` html
    <div class="container-fluid">
      <div class="grid">
        <!-- 2 col grid @ xs, 3 col grid @ sm, 4 col grid @ md -->
        <div class="grid-sizer col-xs-6 col-sm-4 col-md-3"></div>
        <!-- 1 col @ xs, 2 col @ sm, 2 col @ md -->
        <div class="grid-item col-xs-6 col-sm-8 col-md-6">
          <div class="grid-item-content">...</div>
        </div>
        <!-- 1 col @ xs, 1 col @ sm, 1 col @ md -->
        <div class="grid-item col-xs-6 col-sm-4 col-md-3">
          <div class="grid-item-content">...</div>
        </div>
        ...
      </div>
    </div>
    ```
  </div>
  {{> bootstrap-3-mq-demo}}
</div>

{{! ----------------------------------------------------------------- }}

<h2>Animating item size</h2>

<p>You cannot transition or animate the size of an item element <em>and</em> properly lay out. But there is a trick &mdash; you can animate a child element of the item element.</p>

<div class="duo example">
  <div class="duo__cell example__code">
    ``` html
    <div class="grid">
      <!-- items have grid-item-content child elements -->
      <div class="grid-item">
        <div class="grid-item-content"></div>
      </div>
      ...
    ```

    ``` css
    /* item is invisible, but used for layout
    item-content is visible, and transitions size */
    .grid-item,
    .grid-item-content {
      width: 60px;
      height: 60px;
    }
    .grid-item-content {
      background: #09D;
      transition: width 0.4s, height 0.4s;
    }

    /* both item and item content change size */
    .grid-item.is-expanded,
    .grid-item.is-expanded .grid-item-content {
      width: 180px;
      height: 120px;
    }
    ```
  </div>
  {{> animate-item-size}}
</div>

<p>This technique works on items with responsive, percentage widths. Although, it does require a bit more JS. <a href="https://codepen.io/desandro/pen/jGJKL">Check out the example on CodePen</a> to see how it&rsquo;s done.</p>

<div class="duo example">
  <div class="duo__cell example__code">
    ``` css
    .grid-item {
      width: 20%;
      height: 60px;
    }

    .grid-item-content {
      width:  100%;
      height: 100%;
      background: #09D;
      transition: width 0.4s, height 0.4s;
    }
    /* item has expanded size */
    .grid-item.is-expanded {
      width: 60%;
      height: 120px;
    }
    ```
  </div>
  {{> animate-item-size-responsive}}

</div>

{{! ----------------------------------------------------------------- }}

<h2>Support</h2>

<ul>
  <li>Having trouble setting up Isotope?</li>
  <li>Running into a time-consuming problem?</li>
</ul>

<p><a href="https://www.codersclan.net/?repo_id=1">CodersClan has a dedicated support forum for Isotope</a>, where you can get personal support from experienced developers.</p>

<p><a class="support-button button" href="https://www.codersclan.net/?repo_id=1">Get support</a></p>

{{! ----------------------------------------------------------------- }}

<h2>Issues</h2>

<h3>Reduced test cases</h3>

<p>Creating a reduced test case is the best way to debug problems and report issues. Read <a href="https://css-tricks.com/reduced-test-cases/">CSS Tricks</a> on why they&rsquo;re so great.</p>

<p>Create a reduced test case for Isotope by forking any one of the <a href="https://codepen.io/desandro/tag/isotope-docs">CodePen demos</a> from these docs.</p>

<ul>
  <li>A reduced test case clearly demonstrates the bug or issue.</li>
  <li>It contains the bare minimum HTML, CSS, and JavaScript required to demonstrate the bug.</li>
  <li>A link to your production site is <b>not</b> a reduced test case.</li>
</ul>

<p>Creating a reduced test case is the best way to get your issue addressed. They help you point out the problem. They help us debug the problem. They help others understand the problem.</p>

{{! ----------------------------------------------------------------- }}

<h3>Submitting issues</h3>

<p>Report <a href="https://github.com/metafizzy/isotope/issues/">issues on GitHub</a>. Make sure to include a <strong>reduced test case</strong>. Without a reduced test case, your issue may be closed.</p>

{{! ----------------------------------------------------------------- }}

<h2>Upgrading from v1</h2>

{{! ----------------------------------------------------------------- }}

<h3>New features</h3>

<ul>
  <li>Custom CSS no longer required.</li>
  <li>jQuery no longer required. Isotope works with vanilla JavaScript.</li>
  <li><a href="events.html#layoutcomplete"><code>layoutComplete</code> event</a>.</li>
  <li><a href="sorting.html#getsortdata"><code>getSortData</code> shortcut strings</a>.</li>
  <li>Way better support for responsive web design with <a href="options.html#element-sizing">element sizing options</a>.</li>
</ul>

{{! ----------------------------------------------------------------- }}

<h3>Changes</h3>

<ul>
  <li><a href="https://github.com/louisremi/jquery-smartresize">smartresize jQuery plugin</a> removed.</li>
  <li><a href="https://imagesloaded.desandro.com">imagesLoaded</a> no longer included, but is still recommended.</li>
  <li><code>animationOptions</code> removed. jQuery animation removed. This means no animation for IE8 and IE9.</li>
  <li><code>isResizable</code> option renamed to <a href="options.html#isresizebound"><code>isResizeBound</code></a></li>
  <li><code>reLayout</code> method renamed to <a href="methods.html#layout"><code>layout</code></a></li>
  <li><code>layout</code> method renamed to <a href="methods.html#layoutitems"><code>layoutItems</code></a></li>
  <li><code>transformsEnabled</code> option removed. Transforms are still used, but only for transitions.</li>
  <li><code>itemPositionDataEnabled</code> option removed. Item position is now accessible as it is set with <code>left</code> and <code>top</code>.</li>
  <li><code>onLayout</code> option removed. Use the <a href="events.html#layoutcomplete"><code>layoutComplete</code> event</a>.</li>
</ul>

{{! ----------------------------------------------------------------- }}

<h3>Upgrades to <a href="{{root_path}}layout-modes/masonry.html">masonry layout mode</a></h3>

<ul>
  <li>Corner stamp is now integrated as <a href="options.html#stamp"><code>stamp</code> option</a> and <a href="methods.html#stamp"><code>stamp</code> method</a></li>
  <li>Centering integrated as the <a href="{{root_path}}layout-modes/masonry.html#isfitwidth"><code>isFitWidth</code> option</a>.</li>
  <li><code>gutterWidth</code> option renamed to <a href="{{root_path}}layout-modes/masonry.html#gutter"><code>gutter</code></a></li>
</ul>

{{! ----------------------------------------------------------------- }}
