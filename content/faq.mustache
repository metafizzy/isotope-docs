---
title: FAQ
---

{{! --------------------------------------------------- }}

  <h2>How do I fix overlapping item elements?</h2>

  <p>If your layout has images, you probably need to use <a href="layout.html#imagesloaded">imagesLoaded</a>.</p>

  <p>Overlaping items are caused by items that change size after a layout. This is caused by unloaded media: images, <a href="appendix.html#web-fonts">web fonts</a>, embedded buttons. To fix it, you need to initialize or <a href="methods.html#layout"><code>layout</code></a> after all the items have their proper size.</p>

{{! --------------------------------------------------- }}

  <h2>What is Isotope&rsquo;s browser support?</h2>

  <p>Isotope works in IE8+ and modern browsers, including mobile browsers on iOS and Android.</p>

{{! --------------------------------------------------- }}

  <h2>What is the difference between Isotope, Masonry, and Packery?</h2>

  <p>Isotope, <a href="https://masonry.desandro.com">Masonry</a>, and <a href="https://packery.metafizzy.co">Packery</a> are all similar in that they are layout libraries. Many of their options and methods are the same.</p>

  <p>Masonry does cascading grid &ldquo;masonry&rdquo; layouts. Packery does bin-packing layouts, which allow it to be used for <a href="https://packery.metafizzy.co/draggable.html">draggable interactions</a>.</p>

  <p>Isotope does sorting and filtering. Isotope uses <a href="layout-modes/masonry.html">masonry</a> and <a href="layout-modes/packery.html">packery</a> layouts, as well as other layouts. </p>

  <p>Masonry is licensed MIT and is freely available for use and distribution. Isotope and Packery have a proprietary license, where you can purchase a license for commercial projects, or use it freely for open-source projects.</p>

{{! --------------------------------------------------- }}

<h2>The first item breaks the grid!</h2>

<p>You most likely need to set the <a href="{{root_path}}layout-modes/masonry.html#columnwidth"><code>columnWidth</code> option</a> for <a href="{{root_path}}layout-modes/masonry.html">masonry layout mode</a>. Without <code>columnWidth</code> set, the masonry layout mode will use the width of the first item for the size of its columns.</p>

``` js
$('.grid').isotope({
  masonry: {
    columnWidth: 200
  }
});
```

{{! --------------------------------------------------- }}

<h2>How can I access filtered items in current order?</h2>

<p>Use the <code>filteredItems</code> property. <code>filteredItems</code> is an array of <i>Isotope Item</i>s.</p>

``` js
// init isotope, filter & sort
var $grid = $('.grid').isotope({
  filter: '.selector',
  sortBy: 'order'
});
// get Isotope instance, if using jQuery
var iso = $grid.data('isotope');
// count how many
console.log( 'filtered ' + iso.filteredItems.length + ' items' );
// first element
console.log( iso.filteredItems[0].element );
```

{{! --------------------------------------------------- }}

<h2>Items jump after transitioning position</h2>

<p>This double transition jump bug occurs when CSS transitions are enable for all properties on item elements.</p>

``` css
.grid-item {
  transition: all 0.4s;
}
```

{{> edit-demo default="NxoRxp" }}

<p>Fix it by setting <code>transition</code> properties to only the properties that will be transitioning.</p>

``` css
.grid-item {
  transition: background 0.4s, box-shadow 0.4s;
}
```

{{> edit-demo default="qbgaRG" }}

{{! --------------------------------------------------- }}

<h2>Error: &ldquo;cannot call methods on isotope prior to initialization; attempted to call '___'&rdquo;</h2>

<p>This error occurs when your code attempts to use a <a href="methods.html">method</a> before the Isotope instance has been initialized.</p>

``` js
// This code will trigger the "cannot call methods" error

$grid.append( $items )
  // isotope method
  .isotope( 'appended', $items );

// init Isotope
$grid.isotope({
  // options...
});
```

<p>This can happen if you have a race condition â€” when one piece of logic may occur before another. This could happen with <a href="appendix.html#imagesloaded">imagesLoaded</a>, Infinite Scroll, or Ajaxing content.</p>

``` js
// race condition with imagesLoaded

$grid.imagesLoaded( function() {
  // init Isotope
  $grid.isotope({
    // options...
  });
});

// imagesLoaded will trigger after this
$grid.append( $items )
  .isotope( 'appended', $items );
```

<p>To resolve this, make sure that the Isotope instance has been initialized before the method is called.</p>

``` js
$grid.imagesLoaded( function() {
  // init Isotope
  $grid.isotope({
    // options...
  });
  // isotope has been initalized, okay to call methods
  $grid.append( $items )
    .isotope( 'appended', $items );
});
```

``` js
// another fix, init Isotope first, before imagesLoaded
$grid.isotope({
  // options...
});
// okay to call methods
$grid.append( $items )
  .isotope( 'appended', $items );
// just do layout on imagesLoaded
$grid.imagesLoaded( function() {
  $grid.isotope('layout');
});
```
